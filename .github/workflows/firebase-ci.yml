name: Firebase Functions CI
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Authenticate to Google Cloud using the deployer SA JSON in GCP_SA_KEY
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Install Firebase CLI
        run: npm i -g firebase-tools jq

      # Sanity - make sure the SA & project match and Firebase is attached
      - name: Sanity - who am I / which project
        run: |
          echo "FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}"
          echo '${{ secrets.GCP_SA_KEY }}' > $HOME/sa.json
          node -e "const fs=require('fs');const j=JSON.parse(fs.readFileSync(process.env.HOME+'/sa.json','utf8'));console.log('SA project_id:', j.project_id);console.log('SA client_email:', j.client_email);"
          gcloud config list
          gcloud auth list
          # This will 404 if Firebase is not attached to the project
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          curl -s -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://firebase.googleapis.com/v1beta1/projects/${{ secrets.FIREBASE_PROJECT_ID }}/adminSdkConfig" | jq || true

      - name: Install & build functions
        working-directory: apps/functions
        run: |
          npm install --no-audit --no-fund
          npm run build

      - name: Deploy functions
        run: firebase deploy --only functions --project "${{ secrets.FIREBASE_PROJECT_ID }}" --non-interactive
