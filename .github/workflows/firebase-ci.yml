name: Firebase Functions CI
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Auth to Google Cloud with the deployer SA from GCP_SA_KEY
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Install Firebase CLI
        run: npm i -g firebase-tools jq

      # Guardrail: secrets sanity + Firebase attached check
      - name: Sanity - SA project & Firebase attach
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > $HOME/sa.json
          SA_PROJECT=$(node -e "const fs=require('fs');const j=JSON.parse(fs.readFileSync(process.env.HOME+'/sa.json','utf8'));process.stdout.write(j.project_id)")
          echo "FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}"
          echo "SA project_id: $SA_PROJECT"
          test "$SA_PROJECT" = "${{ secrets.FIREBASE_PROJECT_ID }}" || (echo "❌ SA project_id does not match FIREBASE_PROJECT_ID" && exit 1)
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo "Checking Firebase adminSdkConfig..."
          curl -sf -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://firebase.googleapis.com/v1beta1/projects/${{ secrets.FIREBASE_PROJECT_ID }}/adminSdkConfig" \
            >/dev/null || (echo "❌ Project is not attached to Firebase. Attach it in Firebase Console and retry." && exit 1)

      # (Optional) auto-enable APIs if your SA has Service Usage Admin
      - name: Enable required Google APIs (optional)
        run: |
          gcloud services enable \
            cloudfunctions.googleapis.com \
            run.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com \
            firebase.googleapis.com \
            cloudresourcemanager.googleapis.com || true

      - name: Install & build functions
        working-directory: apps/functions
        run: |
          npm install --no-audit --no-fund
          npm run build

      - name: Deploy functions
        run: firebase deploy --only functions --project "${{ secrets.FIREBASE_PROJECT_ID }}" --non-interactive
